openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/campaigns/:
    get:
      operationId: listVaccineCampaigns
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccineCampaign'
          description: ''
      tags:
      - api
    post:
      operationId: createVaccineCampaign
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineCampaign'
          description: ''
      tags:
      - api
  /api/v1/campaigns/{id}/:
    get:
      operationId: retrieveVaccineCampaign
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine campaign.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineCampaign'
          description: ''
      tags:
      - api
    put:
      operationId: updateVaccineCampaign
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine campaign.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineCampaign'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVaccineCampaign
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine campaign.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineCampaign'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineCampaign'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVaccineCampaign
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine campaign.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/bookings/:
    get:
      operationId: listVaccineRecords
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccineRecord'
          description: ''
      tags:
      - api
    post:
      operationId: createVaccineRecord
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineRecordCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineRecordCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineRecordCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineRecordCreate'
          description: ''
      tags:
      - api
  /api/v1/bookings/{id}/:
    get:
      operationId: retrieveVaccineRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine record.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineRecord'
          description: ''
      tags:
      - api
    put:
      operationId: updateVaccineRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineRecord'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineRecord'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVaccineRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineRecord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineRecord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineRecord'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineRecord'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVaccineRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine record.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/patient/profile/:
    get:
      operationId: listPatientProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientProfile'
          description: ''
      tags:
      - api
    post:
      operationId: createPatientProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientProfile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientProfile'
          description: ''
      tags:
      - api
  /api/v1/patient/profile/{id}/:
    get:
      operationId: retrievePatientProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientProfile'
          description: ''
      tags:
      - api
    put:
      operationId: updatePatientProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientProfile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePatientProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientProfile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPatientProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/doctor/profile/:
    get:
      operationId: listDoctorProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DoctorProfile'
          description: ''
      tags:
      - api
    post:
      operationId: createDoctorProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorProfile'
          description: ''
      tags:
      - api
  /api/v1/doctor/profile/{id}/:
    get:
      operationId: retrieveDoctorProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorProfile'
          description: ''
      tags:
      - api
    put:
      operationId: updateDoctorProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorProfile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDoctorProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorProfile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDoctorProfile
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/reviews/:
    get:
      operationId: listCampaignReviews
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampaignReview'
          description: ''
      tags:
      - api
    post:
      operationId: createCampaignReview
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignReview'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReview'
          description: ''
      tags:
      - api
  /api/v1/reviews/{id}/:
    get:
      operationId: retrieveCampaignReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign review.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReview'
          description: ''
      tags:
      - api
    put:
      operationId: updateCampaignReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign review.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReview'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCampaignReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign review.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignReview'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCampaignReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this campaign review.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/campaigns/{campaigns_pk}/schedule/:
    get:
      operationId: listVaccineSchedules
      description: ''
      parameters:
      - name: campaigns_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccineSchedule'
          description: ''
      tags:
      - api
    post:
      operationId: createVaccineSchedule
      description: ''
      parameters:
      - name: campaigns_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineSchedule'
          description: ''
      tags:
      - api
  /api/v1/campaigns/{campaigns_pk}/schedule/{id}/:
    get:
      operationId: retrieveVaccineSchedule
      description: ''
      parameters:
      - name: campaigns_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine schedule.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineSchedule'
          description: ''
      tags:
      - api
    put:
      operationId: updateVaccineSchedule
      description: ''
      parameters:
      - name: campaigns_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine schedule.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineSchedule'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVaccineSchedule
      description: ''
      parameters:
      - name: campaigns_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine schedule.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccineSchedule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineSchedule'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVaccineSchedule
      description: ''
      parameters:
      - name: campaigns_pk
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this vaccine schedule.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/v1/auth/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/auth/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_email/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/v1/auth/users/reset_email_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/v1/auth/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/v1/auth/users/set_email/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/v1/auth/jwt/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    VaccineCampaign:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        vaccine_type:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        schedules:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              campaign:
                type: integer
              date:
                type: string
                format: date
              available_slots:
                type: integer
                maximum: 9223372036854775807
                format: int64
                minimum: 0
              start_time:
                type: string
              end_time:
                type: string
            required:
            - campaign
            - date
            - available_slots
            - start_time
            - end_time
          readOnly: true
        dosage_interval_days:
          type: integer
          maximum: 9223372036854775807
          format: int64
          minimum: 0
        max_participants:
          type: integer
          maximum: 9223372036854775807
          format: int64
          minimum: 0
        created_by:
          type: string
          readOnly: true
        status:
          enum:
          - ACTIVE
          - COMPLETED
          - UPCOMING
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
      - description
      - vaccine_type
      - start_date
      - end_date
      - max_participants
    VaccineRecord:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        campaign_name:
          type: string
          readOnly: true
        campaign_start_date:
          type: string
          format: date
          readOnly: true
        campaign_end_date:
          type: string
          format: date
          readOnly: true
        first_dose_schedule:
          type: string
          readOnly: true
        second_dose_schedule:
          type: string
          readOnly: true
    PatientProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            email:
              type: string
              format: email
              maxLength: 254
            nid:
              type: string
              readOnly: true
            role:
              enum:
              - PATIENT
              - DOCTOR
              type: string
              readOnly: true
            first_name:
              type: string
              maxLength: 150
            last_name:
              type: string
              maxLength: 150
            contact_number:
              type: string
              nullable: true
              maxLength: 15
            profile_image:
              type: string
              format: binary
          required:
          - email
          readOnly: true
        blood_type:
          type: string
          maxLength: 5
        allergies:
          type: string
        medical_conditions:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    DoctorProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            email:
              type: string
              format: email
              maxLength: 254
            nid:
              type: string
              readOnly: true
            role:
              enum:
              - PATIENT
              - DOCTOR
              type: string
              readOnly: true
            first_name:
              type: string
              maxLength: 150
            last_name:
              type: string
              maxLength: 150
            contact_number:
              type: string
              nullable: true
              maxLength: 15
            profile_image:
              type: string
              format: binary
          required:
          - email
          readOnly: true
        specialization:
          type: string
          maxLength: 100
        license_number:
          type: string
          maxLength: 50
        hospital:
          type: string
          maxLength: 100
        bio:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - specialization
      - license_number
    CampaignReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        campaign_name:
          type: string
          readOnly: true
        campaign:
          type: integer
          writeOnly: true
        rating:
          type: integer
          maximum: 5
          minimum: 1
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - campaign
      - rating
    VaccineSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        campaign:
          type: integer
        date:
          type: string
          format: date
        available_slots:
          type: integer
          maximum: 9223372036854775807
          format: int64
          minimum: 0
        start_time:
          type: string
        end_time:
          type: string
      required:
      - campaign
      - date
      - available_slots
      - start_time
      - end_time
    User:
      type: object
      properties:
        nid:
          type: string
          maxLength: 20
          minLength: 10
        role:
          enum:
          - PATIENT
          - DOCTOR
          type: string
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
      required:
      - nid
      - role
    VaccineRecordCreate:
      type: object
      properties:
        campaign_id:
          type: integer
          writeOnly: true
        first_dose_schedule_id:
          type: integer
          writeOnly: true
      required:
      - campaign_id
      - first_dose_schedule_id
    UserCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        nid:
          type: string
          maxLength: 20
          minLength: 10
        role:
          enum:
          - PATIENT
          - DOCTOR
          type: string
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        contact_number:
          type: string
          nullable: true
          maxLength: 15
        profile_image:
          type: string
          format: binary
      required:
      - email
      - nid
      - role
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - new_email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          maxLength: 254
      required:
      - current_password
      - new_email
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
